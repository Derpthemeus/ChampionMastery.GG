version: "3.6"
x-anchors:
  # The name of the configured Traefik TLS cert resolver (defaulting to LE staging environment if not set).
  traefik_cert_resolver: &traefik_cert_resolver "${TRAEFIK_CERT_RESOLVER:-}"
services:
  webserver:
    build:
      context: ./webserver
    environment:
      HIGHSCORES_SERVICE_URL: "http://highscores_service:8181"
      INTERNAL_DRAGON_URL: "http://static-data-service:8080"
      PUBLIC_DRAGON_URL: "https://dragon.${SITE_DOMAIN}"
      ANNOUNCEMENT_MESSAGE:
      ANNOUNCEMENT_LINK:
      SITE_URL: "https://${SITE_DOMAIN}"
    labels:
      traefik.enable: true
      traefik.http.services.webserver.loadbalancer.server.port: 8080
      traefik.http.routers.webserver.rule: &webserver_rule "Host(`${SITE_DOMAIN}`, `www.${SITE_DOMAIN}`)"
      traefik.http.routers.webserver.entrypoints: "https"
      traefik.http.routers.webserver.tls.certResolver: *traefik_cert_resolver
      traefik.http.routers.webserver_redirect.rule: *webserver_rule
      traefik.http.routers.webserver_redirect.entrypoints: "http"
      traefik.http.routers.webserver_redirect.middlewares: "https_redirect@file"
    networks:
      traefik:
      highscoresService:
    depends_on:
      - "static-data-service"
    restart: unless-stopped
  highscores_service:
    build:
      context: "./highscores-service"
    environment:
      MYSQL_CONNECTION_URL: "jdbc:${MYSQL_CONNECTION_URL}"
      RIOT_API_KEY:
    networks:
      mysql:
      prometheus:
      highscoresService:
    depends_on:
      - "mysql"
    restart: unless-stopped
  traefik:
    build:
      context: "./traefik"
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "acmeCerts:/acme/"
    labels:
      traefik.enable: true
      traefik.http.routers.traefik_api.service: "api@internal"
      traefik.http.routers.traefik_api.rule: &traefik_api_rule "Host(`traefik.admin.${SITE_DOMAIN}`, `www.traefik.admin.${SITE_DOMAIN}`)"
      traefik.http.routers.traefik_api.entrypoints: "https"
      traefik.http.routers.traefik_api.tls.certResolver: *traefik_cert_resolver
      traefik.http.routers.traefik_api.middlewares: "admin_panel_auth"
      traefik.http.middlewares.admin_panel_auth.basicauth.removeHeader: true
      traefik.http.middlewares.admin_panel_auth.basicauth.users: "${ADMIN_HTPASSWD}"
      traefik.http.routers.traefik_api_redirect.rule: *traefik_api_rule
      traefik.http.routers.traefik_api_redirect.entrypoints: "http"
      traefik.http.routers.traefik_api_redirect.middlewares: "https_redirect@file"
    networks:
      traefik:
      prometheus:
    restart: unless-stopped
  prometheus:
    build:
      context: "./prometheus"
    command: "--storage.tsdb.path=/prometheus/prometheus_data --config.file=/etc/prometheus/prometheus.yml"
    volumes:
      - "prometheusData:/prometheus/prometheus_data/"
    labels:
      traefik.enable: true
      traefik.http.services.prometheus.loadbalancer.server.port: 9090
      traefik.http.routers.prometheus.rule: &prometheus_rule "Host(`prometheus.admin.${SITE_DOMAIN}`, `www.prometheus.admin.${SITE_DOMAIN}`)"
      traefik.http.routers.prometheus.entrypoints: "https"
      traefik.http.routers.prometheus.tls.certResolver: *traefik_cert_resolver
      traefik.http.routers.prometheus.middlewares: "admin_panel_auth"
      traefik.http.routers.prometheus_redirect.rule: *prometheus_rule
      traefik.http.routers.prometheus_redirect.entrypoints: "http"
      traefik.http.routers.prometheus_redirect.middlewares: "https_redirect@file"
    networks:
      traefik:
      prometheus:
    # Necessary to access data directory.
    user: "root"
    restart: unless-stopped
  cadvisor:
    image: "gcr.io/cadvisor/cadvisor:latest"
    volumes:
      - "/:/rootfs:ro,rslave"
      - "/var/run:/var/run:ro"
      - "/sys:/sys:ro"
      - "/var/lib/docker/:/var/lib/docker:ro,rslave"
      - "/dev/disk/:/dev/disk:ro"
    networks:
      prometheus:
    restart: unless-stopped
  node_exporter:
    image: "prom/node-exporter:latest"
    networks:
      prometheus:
    restart: unless-stopped
  grafana:
    build:
      context: "./grafana"
    labels:
      traefik.enable: true
      traefik.http.services.grafana.loadbalancer.server.port: 3000
      traefik.http.routers.grafana.rule: &grafana_rule "Host(`grafana.admin.${SITE_DOMAIN}`, `www.grafana.admin.${SITE_DOMAIN}`)"
      traefik.http.routers.grafana.entrypoints: "https"
      traefik.http.routers.grafana.tls.certResolver: *traefik_cert_resolver
      traefik.http.routers.grafana.middlewares: "admin_panel_auth"
      traefik.http.routers.grafana_redirect.rule: *grafana_rule
      traefik.http.routers.grafana_redirect.entrypoints: "http"
      traefik.http.routers.grafana_redirect.middlewares: "https_redirect@file"
    networks:
      traefik:
      prometheus:
    restart: unless-stopped
  admin_ui:
    build:
      context: "./admin_ui"
    labels:
      traefik.enable: true
      traefik.http.services.admin_ui.loadbalancer.server.port: 80
      traefik.http.routers.admin_ui.rule: &admin_ui_rule "Host(`admin.${SITE_DOMAIN}`, `www.admin.${SITE_DOMAIN}`)"
      traefik.http.routers.admin_ui.entrypoints: "https"
      traefik.http.routers.admin_ui.tls.certResolver: *traefik_cert_resolver
      traefik.http.routers.admin_ui_redirect.rule: *admin_ui_rule
      traefik.http.routers.admin_ui_redirect.entrypoints: "http"
      traefik.http.routers.admin_ui_redirect.middlewares: "https_redirect@file"
    networks:
      traefik:
    restart: unless-stopped
  mysql:
    build:
      context: "./mysql/"
      args:
        MYSQL_ROOT_PASSWORD:
    ports:
      - "3306:3306"
    volumes:
      - "mysqlData:/mysql_data"
    environment:
      MYSQL_ROOT_PASSWORD:
    networks:
      mysql:
      prometheus:
    restart: unless-stopped
    cap_add:
      - SYS_NICE
  prom_mysql_exporter:
    image: "prom/mysqld-exporter:v0.11.0"
    environment:
      DATA_SOURCE_NAME: "root:${MYSQL_ROOT_PASSWORD}@(mysql)/"
    networks:
      prometheus:
    restart: unless-stopped
  static-data-service:
    build:
      context: ./static-data-service
    volumes:
      - "staticData:/cmgg/staticData/"
    labels:
      traefik.enable: true
      traefik.http.services.dragon.loadbalancer.server.port: 8080
      traefik.http.routers.dragon.rule: &webserver_rule "Host(`dragon.${SITE_DOMAIN}`, `www.dragon.${SITE_DOMAIN}`)"
      traefik.http.routers.dragon.entrypoints: "https"
      traefik.http.routers.dragon.tls.certResolver: *traefik_cert_resolver
      traefik.http.routers.dragon_redirect.rule: *webserver_rule
      traefik.http.routers.dragon_redirect.entrypoints: "http"
      traefik.http.routers.dragon_redirect.middlewares: "https_redirect@file"
    networks:
      traefik:
      highscoresService:
    restart: unless-stopped
  healthcheck:
    build:
      context: ./healthcheck
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
    networks:
      highscoresService:
    depends_on:
      - "highscores_service"
    restart: unless-stopped
  freshness_automation:
    build:
      context: ./freshness_automation
    environment:
      MYSQL_USER: "root"
      MYSQL_PASSWORD: "${MYSQL_ROOT_PASSWORD}"
      MYSQL_HOST: "mysql"
      HIGHSCORES_SERVICE_URL: "http://highscores_service:8181"
    networks:
      mysql:
      highscoresService:
    depends_on:
      - "highscores_service"
    restart: unless-stopped
volumes:
  staticData:
  acmeCerts:
  prometheusData:
  mysqlData:
networks:
  traefik:
  prometheus:
  mysql:
  highscoresService:
